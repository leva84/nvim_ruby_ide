-- ============================================================================
-- NEOVIM KEYMAPS - ВСЕ ШОРТКАТЫ И ПРИВЯЗКИ КЛАВИШ
-- ============================================================================

local harpoon = require("harpoon")

-- ============================================================================
-- БЫСТРЫЙ ВЫХОД В NORMAL MODE
-- ============================================================================
vim.keymap.set({'i', 'v', 'c'}, 'jj', '<Esc>', { desc = 'Выход в Normal mode' })
vim.keymap.set('t', 'jj', '<C-\\><C-n>', { desc = 'Выход из Terminal mode' })

-- ============================================================================
-- СОХРАНЕНИЕ И ВЫХОД
-- ============================================================================
vim.keymap.set('n', '<leader>w', ':w<CR>', { desc = 'Сохранить файл' })
vim.keymap.set('n', '<leader>q', ':q<CR>', { desc = 'Выйти' })
vim.keymap.set('n', '<leader>wq', ':wq<CR>', { desc = 'Сохранить и выйти' })
vim.keymap.set('n', '<leader>Q', ':qa!<CR>', { desc = 'Выйти без сохранения' })

-- ============================================================================
-- ЛОКАЛЬНЫЙ ПОИСК (ТЕКУЩИЙ ФАЙЛ)
-- ============================================================================
-- Fuzzy поиск в текущем файле
vim.keymap.set('n', '<leader>/', ':Telescope current_buffer_fuzzy_find<CR>', { desc = 'Поиск в текущем файле (Telescope)' })

-- Очистить подсветку поиска
vim.keymap.set('n', '<leader><leader>', ':noh<CR>', { desc = 'Очистить подсветку поиска' })

-- ============================================================================
-- ЛОКАЛЬНАЯ ЗАМЕНА (ТЕКУЩИЙ ФАЙЛ)
-- ============================================================================
-- Ручная замена в текущем файле
vim.keymap.set('n', '<leader>r', ':%s/', { desc = 'Замена в текущем файле (:%s/)' })

-- Замена слова под курсором в текущем файле с подтверждением
vim.keymap.set('n', '<leader>rc', function()
  local word = vim.fn.expand('<cword>')
  vim.cmd(':%s/' .. word .. '//gc')
  vim.api.nvim_input('<Left><Left><Left>')
end, { desc = 'Замена слова под курсором (текущий файл)' })

-- ============================================================================
-- ГЛОБАЛЬНЫЙ ПОИСК (ВЕСЬ ПРОЕКТ)
-- ============================================================================
-- Найти файл
vim.keymap.set('n', '<leader>ff', ':Telescope find_files<CR>', { desc = 'Найти файл' })

-- Grep по проекту
vim.keymap.set('n', '<leader>fg', ':Telescope live_grep<CR>', { desc = 'Grep по проекту' })

-- Найти слово под курсором
vim.keymap.set('n', '<leader>fw', ':Telescope grep_string<CR>', { desc = 'Найти слово под курсором (проект)' })

-- Список открытых буферов
vim.keymap.set('n', '<leader>fb', ':Telescope buffers<CR>', { desc = 'Список открытых буферов' })

-- Недавние файлы
vim.keymap.set('n', '<leader>fr', ':Telescope oldfiles<CR>', { desc = 'Недавние файлы' })

-- Поиск в помощи
vim.keymap.set('n', '<leader>fh', ':Telescope help_tags<CR>', { desc = 'Помощь' })

-- ============================================================================
-- ГЛОБАЛЬНАЯ ЗАМЕНА (ВЕСЬ ПРОЕКТ)
-- ============================================================================
-- Открыть Spectre (замена по проекту)
vim.keymap.set('n', '<leader>S', '<cmd>lua require("spectre").toggle()<CR>', { desc = 'Spectre (замена по проекту)' })

-- Замена слова под курсором по всему проекту
vim.keymap.set(
  'n', '<leader>rp', '<cmd>lua require("spectre").open_visual({select_word=true})<CR>',
  { desc = 'Замена слова под курсором (проект)' }
)

-- ============================================================================
-- ФАЙЛОВОЕ ДЕРЕВО (nvim-tree)
-- ============================================================================
vim.keymap.set('n', '<leader>e', ':NvimTreeToggle<CR>', { desc = 'Открыть/закрыть дерево файлов' })
vim.keymap.set('n', '<leader>ef', ':NvimTreeFindFile<CR>', { desc = 'Найти текущий файл в дереве' })

-- ============================================================================
-- НАВИГАЦИЯ МЕЖДУ ОКНАМИ
-- ============================================================================
vim.keymap.set('n', '<C-h>', '<C-w>h', { desc = 'Окно влево' })
vim.keymap.set('n', '<C-j>', '<C-w>j', { desc = 'Окно вниз' })
vim.keymap.set('n', '<C-k>', '<C-w>k', { desc = 'Окно вверх' })
vim.keymap.set('n', '<C-l>', '<C-w>l', { desc = 'Окно вправо' })

-- ============================================================================
-- ИЗМЕНЕНИЕ РАЗМЕРА ОКОН
-- ============================================================================
vim.keymap.set('n', '<C-Up>', ':resize -2<CR>', { desc = 'Уменьшить высоту' })
vim.keymap.set('n', '<C-Down>', ':resize +2<CR>', { desc = 'Увеличить высоту' })
vim.keymap.set('n', '<C-Left>', ':vertical resize -2<CR>', { desc = 'Уменьшить ширину' })
vim.keymap.set('n', '<C-Right>', ':vertical resize +2<CR>', { desc = 'Увеличить ширину' })

-- ============================================================================
-- УПРАВЛЕНИЕ БУФЕРАМИ
-- ============================================================================
vim.keymap.set('n', '<leader>bd', ':bd<CR>', { desc = 'Закрыть буфер' })
vim.keymap.set('n', '<Tab>', ':bnext<CR>', { desc = 'Следующий буфер' })
vim.keymap.set('n', '<S-Tab>', ':bprevious<CR>', { desc = 'Предыдущий буфер' })

-- ============================================================================
-- HARPOON (БЫСТРЫЕ ЗАКЛАДКИ)
-- ============================================================================
vim.keymap.set("n", "<leader>a", function() harpoon:list():add() end, { desc = 'Добавить файл в Harpoon' })
vim.keymap.set("n", "<C-e>", function() harpoon.ui:toggle_quick_menu(harpoon:list()) end, { desc = 'Открыть меню Harpoon' })
vim.keymap.set("n", "<leader>1", function() harpoon:list():select(1) end, { desc = 'Harpoon файл 1' })
vim.keymap.set("n", "<leader>2", function() harpoon:list():select(2) end, { desc = 'Harpoon файл 2' })
vim.keymap.set("n", "<leader>3", function() harpoon:list():select(3) end, { desc = 'Harpoon файл 3' })
vim.keymap.set("n", "<leader>4", function() harpoon:list():select(4) end, { desc = 'Harpoon файл 4' })

-- ============================================================================
-- LSP НАВИГАЦИЯ И ДЕЙСТВИЯ
-- ============================================================================
vim.keymap.set('n', 'gd', vim.lsp.buf.definition, { desc = 'Перейти к определению' })
vim.keymap.set('n', 'gD', vim.lsp.buf.declaration, { desc = 'Перейти к объявлению' })
vim.keymap.set('n', 'gi', vim.lsp.buf.implementation, { desc = 'Перейти к реализации' })
vim.keymap.set('n', 'gr', vim.lsp.buf.references, { desc = 'Найти все использования' })
vim.keymap.set('n', 'K', vim.lsp.buf.hover, { desc = 'Показать документацию' })
vim.keymap.set('n', '<leader>rn', vim.lsp.buf.rename, { desc = 'Переименовать (LSP - умное переименование по проекту)' })
vim.keymap.set('n', '<leader>ca', vim.lsp.buf.code_action, { desc = 'Code Action' })
vim.keymap.set('n', '[d', vim.diagnostic.goto_prev, { desc = 'Предыдущая ошибка' })
vim.keymap.set('n', ']d', vim.diagnostic.goto_next, { desc = 'Следующая ошибка' })

-- ============================================================================
-- GIT (FUGITIVE)
-- ============================================================================
vim.keymap.set('n', '<leader>gs', ':Git<CR>', { desc = 'Git status' })
vim.keymap.set('n', '<leader>gc', ':Git commit<CR>', { desc = 'Git commit' })
vim.keymap.set('n', '<leader>gp', ':Git push<CR>', { desc = 'Git push' })
vim.keymap.set('n', '<leader>gl', ':Git pull<CR>', { desc = 'Git pull' })

-- ============================================================================
-- РЕДАКТИРОВАНИЕ
-- ============================================================================
-- Перемещение строк
vim.keymap.set('n', '<A-j>', ':m .+1<CR>==', { desc = 'Переместить строку вниз' })
vim.keymap.set('n', '<A-k>', ':m .-2<CR>==', { desc = 'Переместить строку вверх' })
vim.keymap.set('v', '<A-j>', ":m '>+1<CR>gv=gv", { desc = 'Переместить выделение вниз' })
vim.keymap.set('v', '<A-k>', ":m '<-2<CR>gv=gv", { desc = 'Переместить выделение вверх' })

-- Вставка без замены регистра
vim.keymap.set('v', 'p', '"_dP', { desc = 'Вставить без замены регистра' })

-- ============================================================================
-- MARKDOWN PREVIEW
-- ============================================================================
vim.keymap.set('n', '<leader>mo', ':MarkdownPreview<CR>', { desc = 'Открыть Markdown preview' })
vim.keymap.set('n', '<leader>mc', ':MarkdownPreviewStop<CR>', { desc = 'Закрыть Markdown preview' })
vim.keymap.set('n', '<leader>mt', ':MarkdownPreviewToggle<CR>', { desc = 'Переключить Markdown preview' })

-- ============================================================================
-- ШПАРГАЛКА ПО ШОРТКАТАМ
-- ============================================================================
--[[

═════════════════════════════════════════════════════════════════════════════
                         ПОЛНАЯ ШПАРГАЛКА ПО ШОРТКАТАМ
═════════════════════════════════════════════════════════════════════════════

БЫСТРЫЙ ВЫХОД
───────────────────────────────────────────────────────────────────────────
  jj (в Insert/Visual/Command)   → Выход в Normal mode
  jj (в Terminal mode)            → Выход из Terminal mode

СОХРАНЕНИЕ И ВЫХОД
───────────────────────────────────────────────────────────────────────────
  Space + w                       → Сохранить файл
  Space + q                       → Выйти
  Space + wq                      → Сохранить и выйти
  Space + Q                       → Выйти без сохранения (принудительно)

ЛОКАЛЬНЫЙ ПОИСК (ТЕКУЩИЙ ФАЙЛ)
───────────────────────────────────────────────────────────────────────────
  Space + /                       → Поиск в текущем файле (Telescope fuzzy)
  Space + Space                   → Очистить подсветку поиска
  /pattern                        → Стандартный Vim-поиск
  n / N                           → След./пред. совпадение
  * / #                           → Найти слово под курсором

ЛОКАЛЬНАЯ ЗАМЕНА (ТЕКУЩИЙ ФАЙЛ)
───────────────────────────────────────────────────────────────────────────
  Space + r                       → Замена в текущем файле (:%s/)
  Space + rc                      → Замена слова под курсором с подтверждением
  :%s/old/new/g                   → Ручная замена всех вхождений
  :%s/old/new/gc                  → Ручная замена с подтверждением

ГЛОБАЛЬНЫЙ ПОИСК (ВЕСЬ ПРОЕКТ)
───────────────────────────────────────────────────────────────────────────
  Space + ff                      → Найти файл (Telescope)
  Space + fg                      → Grep по всему проекту (Telescope)
  Space + fw                      → Найти слово под курсором (проект)
  Space + fb                      → Список открытых буферов
  Space + fr                      → Недавние файлы
  Space + fh                      → Поиск в помощи

ГЛОБАЛЬНАЯ ЗАМЕНА (ВЕСЬ ПРОЕКТ)
───────────────────────────────────────────────────────────────────────────
  Space + S                       → Spectre (замена по проекту с превью)
  Space + rp                      → Замена слова под курсором (весь проект)

ФАЙЛОВОЕ ДЕРЕВО
───────────────────────────────────────────────────────────────────────────
  Space + e                       → Открыть/закрыть дерево файлов
  Space + ef                      → Найти текущий файл в дереве

НАВИГАЦИЯ МЕЖДУ ОКНАМИ
───────────────────────────────────────────────────────────────────────────
  Ctrl + h/j/k/l                  → Переход между окнами (←↓↑→)
  Ctrl + ↑/↓/←/→                  → Изменение размера окна

БУФЕРЫ
───────────────────────────────────────────────────────────────────────────
  Tab                             → Следующий буфер
  Shift + Tab                     → Предыдущий буфер
  Space + bd                      → Закрыть буфер

HARPOON (БЫСТРЫЕ ЗАКЛАДКИ)
───────────────────────────────────────────────────────────────────────────
  Space + a                       → Добавить файл в Harpoon
  Ctrl + e                        → Открыть меню Harpoon
  Space + 1/2/3/4                 → Мгновенно перейти к файлу 1/2/3/4

LSP (НАВИГАЦИЯ ПО КОДУ)
───────────────────────────────────────────────────────────────────────────
  gd                              → Перейти к определению
  gD                              → Перейти к объявлению
  gi                              → Перейти к реализации
  gr                              → Найти все использования
  K                               → Показать документацию
  Space + rn                      → Переименовать через LSP (умное, весь проект)
  Space + ca                      → Code Action
  [d / ]d                         → Пред./след. ошибка

GIT
───────────────────────────────────────────────────────────────────────────
  Space + gs                      → Git status
  Space + gc                      → Git commit
  Space + gp                      → Git push
  Space + gl                      → Git pull

РЕДАКТИРОВАНИЕ
───────────────────────────────────────────────────────────────────────────
  gcc                             → Закомментировать/раскомментировать строку
  gc (Visual mode)                → Закомментировать выделение
  Alt + j/k                       → Переместить строку вниз/вверх
  Alt + j/k (Visual)              → Переместить выделение вниз/вверх
  p (Visual mode)                 → Вставить без замены регистра

LEAP (БЫСТРАЯ НАВИГАЦИЯ)
───────────────────────────────────────────────────────────────────────────
  s{char}{char}                   → Прыгнуть к символу (вперёд)
  S{char}{char}                   → Прыгнуть к символу (назад)

MARKDOWN PREVIE
───────────────────────────────────────────────────────────────────────────
  Space + mo                      → Открыть Markdown preview
  Space + mc                      → Закрыть Markdown preview
  Space + mt                      → Переключить Markdown preview
═════════════════════════════════════════════════════════════════════════════

ВАЖНО: РАЗНИЦА МЕЖДУ ЛОКАЛЬНЫМ И ГЛОБАЛЬНЫМ ПОИСКОМ/ЗАМЕНОЙ
═════════════════════════════════════════════════════════════════════════════

ЛОКАЛЬНЫЙ (текущий файл):
  - Space + /     → поиск в текущем файле
  - Space + r     → замена в текущем файле
  - Space + rc    → замена слова под курсором в текущем файле

ГЛОБАЛЬНЫЙ (весь проект):
  - Space + fg    → поиск по проекту
  - Space + S     → замена по проекту (Spectre)
  - Space + rp    → замена слова под курсором по проекту
  - Space + rn    → умное переименование через LSP (весь проект)

═════════════════════════════════════════════════════════════════════════════
]]

